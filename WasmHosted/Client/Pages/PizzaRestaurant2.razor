@page "/pizzarestaurant2"
@using WasmHosted.Shared.Models
@using System.Net
@using WasmHosted.Shared.ViewModels.PizzaRestaurant

@inject HttpClient _httpClient

<h3>Welcome to Pizza Restaurant</h3>

@if (!_stateVm.MenuVm.Pizzas.Any())
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <PizzaList
        Title="Our selection of pizzas"
        Pizzas="@_stateVm.MenuVm.Pizzas"
        ButtonTitle="Add"
        ButtonClass="btn btn-success"
        Selected="@AddToBasket"/>
    
    <ShoppingBasket
        OrderedPizzas="@_stateVm.BasketVm.Pizzas.Select(t => _stateVm.MenuVm.GetPizza(t))"
        Selected="RemoveFromBasket"/>

    <CustomerEntry
        Title="Please enter your details below"
        @bind-Customer="@_stateVm.BasketVm.Customer"
        ValidSubmit="Checkout" />
}

@if (DebuggerExtensions.IsDebug())
{
    <br />
    @_stateVm.ToJson()
}

@code {
    private readonly StateVm _stateVm = new();

    protected override async Task OnInitializedAsync()
    {
        _stateVm.MenuVm = (await _httpClient.GetFromJsonAsync<MenuVm>("PizzaRestaurant/Menu"))!;
    }

    private void AddToBasket(PizzaVm pizzaVm)
    {
        _stateVm.BasketVm.Pizzas.Add(pizzaVm.Id);
    }

    private void RemoveFromBasket(PizzaVm pizzaVm)
    {
        _stateVm.BasketVm.Pizzas.Remove(pizzaVm.Id);
    }

    private async Task Checkout()
    {
        var messageTemplate = "Order for {0} pizza(s) ({1}) for {2} at {3} {4} received";

        var pizzaNumber = _stateVm.BasketVm.Pizzas.Count;
        var customerName = _stateVm.BasketVm.Customer.Name;
        var street = _stateVm.BasketVm.Customer.Street;
        var city = _stateVm.BasketVm.Customer.City;

        var pizzaSpec = string.Empty;

        _stateVm.BasketVm.Pizzas.GroupBy(t => t).Select(t =>
        {
            pizzaSpec += $"{t.Count()} x {_stateVm.MenuVm.GetPizza(t.Key)!.Name}, ";
            return t;
        }).ToList();

        pizzaSpec.Trim(' ').Trim(',');

        var message = string.Format(messageTemplate, pizzaNumber, pizzaSpec, customerName, street, city);

        var response = await _httpClient.PostAsJsonAsync("PizzaRestaurant/Orders", _stateVm.BasketVm);

        if (response.StatusCode == HttpStatusCode.Created)
        {
            Console.WriteLine(message);
        }
        else
        {
            Console.WriteLine("Order creating error");
        }
    }

}