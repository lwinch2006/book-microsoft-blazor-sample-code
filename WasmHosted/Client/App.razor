@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader _lazyAssemblyLoader

<Fluxor.Blazor.Web.StoreInitializer />

<Router
    AppAssembly="@typeof(App).Assembly"
    AdditionalAssemblies="@_additionalAssemblies"
    OnNavigateAsync="OnNavigate">

    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(ErrorLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
    <Navigating>
        Loading additional components...
    </Navigating>
</Router>

@code {

    private readonly List<Assembly> _additionalAssemblies = new();

    private async Task OnNavigate(NavigationContext context)
    {
        if (context.Path.Equals("AnimalSelector", StringComparison.OrdinalIgnoreCase)
            || context.Path.Equals("PizzaRestaurant2", StringComparison.OrdinalIgnoreCase)
            || context.Path.Equals("fetchdata1", StringComparison.OrdinalIgnoreCase)
            || context.Path.Equals("fetchdata2", StringComparison.OrdinalIgnoreCase)
            || context.Path.Equals("FetchDataWithFluxor", StringComparison.OrdinalIgnoreCase)
            || context.Path.Equals("FetchDataWithgRPC", StringComparison.OrdinalIgnoreCase)
            )
        {
            var assemblies = await _lazyAssemblyLoader.LoadAssembliesAsync(new[] { "ComponentsLibrary.dll" });
            _additionalAssemblies.AddRange(assemblies);
        }
    }

}